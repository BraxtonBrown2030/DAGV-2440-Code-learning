proc GenerateStairCase(float $stairHight,float $stairDepth,float $stairWidth,int $indacatedStepnumber,float $yOffSet,float $pivotX,float $pivotY,float $pivotZ, float $centerPiller)
{

    float $stairYvalue = $stairHight;

    int $stiarnumber;

    float $offcenter;
    float $centerPiller;

    while($indacatedStepnumber > $stiarnumber)
    {

    string $steps[] = `polyCube -height $stairHight -width $stairWidth -depth $stairDepth -n "steps"`;

    $offcenter = $stairWidth / 2;

    move $offcenter ($stairYvalue + $stiarnumber) 0;

    rotate -y ($yOffSet * $stiarnumber) -pivot $pivotX $pivotY $pivotZ -componentSpace;

    $stiarnumber++;

    polyCylinder -height $stairHight -radius $centerPiller;
    move 0 ($stairYvalue + $stiarnumber) 0;
    }
}

//  (stairHight, stairDepth, stairWidth, indacatedStepnumber, yOffSet, pivotX, pivotY, pivotZ , centerPillerWidth)
GenerateStairCase(2,2,8,24,13,0,0,0,2);