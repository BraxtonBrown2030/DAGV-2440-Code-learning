global proc AddNumber(float $inputnumbers[])
{
    float $total;

    for ($i=0; $i<(size($inputnumbers)); $i++)
    {
        $total += $inputnumbers[$i];
    }

    print($total);

}

global proc SubtractNumber(float $inputnumbers[])
{
    float $total;

    for ($i=0; $i<(size($inputnumbers)); $i++)
    {
        $total -= $inputnumbers[$i];
    }

    print($total);

}

global proc MulityplyNumber(float $inputnumbers[])
{
    float $total = 1;

    for ($i=0; $i<(size($inputnumbers)); $i++)
    {
        $total *= $inputnumbers[$i];
    }

    print($total);

}

global proc DivideNumber(float $inputnumbers[])
{
    float $total;

    for ($i=0; $i<(size($inputnumbers)); $i++)
    {
       $dicivedsum = $inputnumbers[$i] /= $inputnumbers[1];

        if($i < size($inputnumbers))
        {
            $dicivedsum /= $inputnumbers[$i];

            $total = $dicivedsum;
    
        } 
    }
    print("Your total is: " + $total + "\n");

}

global proc PowerOfNumber(float $inputnumber, int $PowerOfNumber)
{
    float $total;
    float $baseinput = $inputnumber;

    for ($i=0; $i<($PowerOfNumber) - 1; $i++)
    {
        
        $inputnumber *= $inputnumber;

        $total = $inputnumber;

    }

    print($baseinput + " To the power of " + $PowerOfNumber + " is " + $total + "\n");

}

global proc MeanOfNUmbers(float $inputnumbers[])
{
    float $total;

    for ($i=0; $i<(size($inputnumbers)); $i++)
    {
        $total += $inputnumbers[$i];
    }

    if($total > 0)
    {

        $total /= 2;

    }

    print("The mean of the numbers " + $inputnumbers[$i] + " is " + $total + "\n");

}

global proc MedianOfnumbers(float $inputnumbers[])
{
    //temps for swaping verables
    float $tempVarable1;
    float $tempVarable2;

    //for printing numbers
    string $numused = "";

    float $fixednumbers[] = `sort $inputnumbers`; 

    for ($i=0; $i<(size($inputnumbers)); $i++)
    {
        $numused += $fixednumbers[$i] + ",";
    }

    if(size($inputnumbers) % 2 == 0)
    {
        int $center = size($inputnumbers) / 2;
        float $meadain = ($fixednumbers[$center - 1] + $fixednumbers[$center]) / 2.0;
        print("the median of " + $numused + "is " + $meadain + "\n");

    }
    else
    {
        int $center = size($inputnumbers) / 2;
        float $medain = $center;
        print("the median of " + $numused + "is " + $medain + "\n");

    }

}

global proc string CalculatorSlector(int $function, float $inputnumbers[])
{

    if($function == 1)
    {
        return(AddNumber($inputnumbers));
    }

    else if($function == 2)
    {
        return(SubtractNumber($inputnumbers));
    }

    else if($function == 3)
    {
        return(MulityplyNumber($inputnumbers));
    }
    
    else if($function == 4)
    {
        return(DivideNumber($inputnumbers));
    }

    else if($function == 5)
    {
        return(RetuenPowerOfNumber($inputnumbers));
    }

    else if($function == 6)
    {
        return(MeanOfNUmbers($inputnumbers));
    }

    else if($function == 7)
    {
        return(MedianOfnumbers($inputnumbers));
    }
    else 
    {

        print("Not a vaid number or number set" + "\n");

    }

}
/*
global proc Button_Go()
{
    int $inputnumbersValue[] = `intFieldGrp -q -value`; // Get an array of integers
    string $slecectedfield = `optionVar -q "SelectedOperation"`;
     string $slecectedfield2 = `optionVar -q "SelectedOperation2"`;
    float $inputnumbersFloat[]; // Create a new array for floats

    // Convert the integer array to float
    for ($i = 0; $i < size($inputnumbersValue); $i++) {
        $inputnumbersFloat[$i] = float($inputnumbersValue[$i]);
    }
     string $sleceted = `radioButtonGrp -q -select $slecectedfield`;
     string $sleceted2 = `radioButtonGrp -q -select $slecectedfield2`;

    CalculatorSlector($slecectedfield, $inputnumbersFloat); // Pass the float array
}
*/


global proc Button_Go()
{
    float $inputnumbersFloat[];

    string $inputnumbersfield[] = `optionVar -q "ImputNumbers"`;
    string $slecectedfield = `optionVar -q "SelectedOperation"`;

    string $resultField = `optionVar -q "result"`;

    string $inputnumbersInput[] = `textFieldGrp -q -value $inputnumbersfield`;
    string $sleceted = `radioButtonGrp -q -select $slecectedfield`;


        for ($i = 0; $i < size($inputnumbersfield); $i++) 
        {
        $inputnumbersFloat[$i] = float($inputnumbersfield[$i]);
        }

    string $result = CalculatorSlector($slecectedfield,$inputnumbersfield);
    textField -e -text $result $resultField;
    
}


global proc CalculatorUI()
{

    string $mainwindow = "ftWindow";

    if(`window -exists $mainwindow`)
        deleteUI $mainwindow;

    $mainwindow = `window -title "caculator"
                         -widthHeight 400 400
                         -resizeToFitChildren 1
                        $mainwindow`;
    string $layout = `columnLayout -parent $mainwindow -adjustableColumn 1`;
    
    string $collection1 ;


    optionVar -stringValue "ImputNumbers" `textFieldGrp`;
    optionVar -stringValue "SelectedOperation" `radioButtonGrp -numberOfRadioButtons 4  -labelArray4 "Add" "Sub" "Multy" "Divide"`;
    optionVar -stringValue "SelectTwo" `radioButtonGrp -numberOfRadioButtons 3 -labelArray3 "Power" "mean" "meadin"`;
    optionVar -stringVaule "result" `textField -editable 0`;
    button -parent $layout -label "Caculate" -command "Button_Go";

    

    showWindow $mainwindow;

}

CalculatorUI();